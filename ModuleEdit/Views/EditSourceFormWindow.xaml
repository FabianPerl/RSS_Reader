<Window
  x:Class="ModuleEdit.Views.EditSourceFormWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:Infrastructure.Models;assembly=Infrastructure"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:viewModels="clr-namespace:ModuleEdit.ViewModels"
  MinWidth="700"
  MinHeight="500"
  MaxWidth="700"
  MaxHeight="500"
  ResizeMode="NoResize"
  d:DesignHeight="300"
  d:DesignWidth="300"
  Title="{StaticResource TextEditFeedsource}"
  Icon="rss_icon.ico"
  prism:ViewModelLocator.AutoWireViewModel="True"
  Background="{DynamicResource MaterialDesignPaper}"
  WindowStartupLocation="CenterScreen"
  mc:Ignorable="d">

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Infrastructure;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

      </ResourceDictionary.MergedDictionaries>
      <DataTemplate x:Key="DataTemplateSourcesToEdit" DataType="models:Source">
        <StackPanel Background="{StaticResource BrushTransparent}" Orientation="Horizontal">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
              <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.PreviewEditSourceCommand)}" CommandParameter="{Binding}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
          <materialDesign:PackIcon
            Width="{StaticResource WidthIcon}"
            Height="{StaticResource HeightIcon}"
            VerticalAlignment="Center"
            Kind="Label" />
          <TextBlock
            Margin="{StaticResource MarginLeft20Right10}"
            VerticalAlignment="Center"
            Text="{Binding Name}" />
        </StackPanel>
      </DataTemplate>

    </ResourceDictionary>
  </Window.Resources>
  <DockPanel>

    <Button 
      Click="CloseWindow"
      DockPanel.Dock="Bottom"
      Margin="{StaticResource MarginAllSides12}"
      ToolTip="{StaticResource TooltipCloseWoAdding}">
      <StackPanel Orientation="Horizontal">
        <materialDesign:PackIcon
          Width="{StaticResource WidthSmallIcon}"
          Height="{StaticResource HeightSmallIcon}"
          Margin="{StaticResource MarginTop2Right4}"
          Kind="WindowClose" />
        <TextBlock Text="{StaticResource TextCloseWindow}" />
      </StackPanel>
    </Button>
  <Grid>
      <Grid.ColumnDefinitions>
          <ColumnDefinition Width="1*"></ColumnDefinition>
          <ColumnDefinition Width="1*"></ColumnDefinition>
      </Grid.ColumnDefinitions>


<Grid DockPanel.Dock="Left" Grid.Column="0">
    <Grid.RowDefinitions>
        <RowDefinition Height="2*"></RowDefinition>
        <RowDefinition Height="Auto"></RowDefinition>
    </Grid.RowDefinitions>

        <ListView
        Grid.Row="0"            
          BorderBrush="{x:Null}"
          Foreground="{StaticResource BrushLight}"
          ItemTemplate="{StaticResource DataTemplateSourcesToEdit}"
          ItemsSource="{Binding AllSources}"
          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
          <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
              <Setter Property="Height" Value="{StaticResource HeightListViewItemSource}" />
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              <Setter Property="VerticalContentAlignment" Value="Stretch" />
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Cursor" Value="Hand" />
                </Trigger>
              </Style.Triggers>
            </Style>
          </ListView.ItemContainerStyle>
        </ListView>

        <Button
        Grid.Row="1"
          Margin="{StaticResource MarginLeft3Top3Right3}"
          Click="CloseWindow"
          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.RemoveSourceCommand)}"
          IsEnabled="{Binding HasValues}"
          Style="{StaticResource MaterialDesignFlatButton}"
          ToolTip="{StaticResource TooltipDeleteSource}">
          <StackPanel Orientation="Horizontal">
            <materialDesign:PackIcon
              Width="{StaticResource WidthAddDelIcon}"
              Height="{StaticResource HeightAddDelIcon}"
              Margin="{StaticResource MarginTop2Right4}"
              Kind="Delete" />
            <TextBlock Text="{StaticResource DeleteSource}" />
          </StackPanel>
        </Button>
</Grid>
      <StackPanel
      Grid.Column="1"
        Margin="{StaticResource MarginLeftRightBottom12}">
        <TextBox
          Margin="{StaticResource MarginBottom12}"
          materialDesign:HintAssist.Hint="{StaticResource HintTitle}"
          Foreground="{StaticResource BrushLight}"
          IsEnabled="{Binding HasValues}"
          Style="{StaticResource MaterialDesignFloatingHintTextBox}"
          Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.NameOfSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <TextBox
          Margin="{StaticResource MarginBottom12}"
          materialDesign:HintAssist.Hint="{StaticResource HintUrl}"
          Foreground="{StaticResource BrushLight}"
          IsEnabled="{Binding HasValues}"
          Style="{StaticResource MaterialDesignFloatingHintTextBox}"
          Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.UriOfSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <ComboBox
          materialDesign:HintAssist.Hint="{StaticResource HintCategory}"
          Foreground="{StaticResource BrushLight}"
          IsEnabled="{Binding HasValues}"
          ItemsSource="{Binding Categories}"
          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
          Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.CategoryOfSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <Button
          Margin="{StaticResource MarginTop12}"
          Click="CloseWindow"
          Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditSourceFormWindowViewModel.EditSourceCommand), Mode=OneWay}"
          Style="{StaticResource MaterialDesignFlatButton}"
          ToolTip="{StaticResource TooltipChangeSource}">
          <StackPanel Orientation="Horizontal">
            <materialDesign:PackIcon
              Width="{StaticResource WidthSmallIcon}"
              Height="{StaticResource HeightSmallIcon}"
              Margin="{StaticResource MarginTop2Right4}"
              Kind="Edit" />
            <TextBlock Text="{StaticResource ChangeSource}" />
          </StackPanel>
        </Button>
      </StackPanel>

  </Grid>
  </DockPanel>
</Window>
