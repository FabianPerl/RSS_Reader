<Window
  x:Class="ModuleEdit.Views.EditFeedFormWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:ModuleEdit.Views"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:models="clr-namespace:Infrastructure.Models;assembly=Infrastructure"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:viewModels="clr-namespace:ModuleEdit.ViewModels"
  d:DesignHeight="300"
  d:DesignWidth="300"
  MinHeight="300"
  MinWidth="700"
  prism:ViewModelLocator.AutoWireViewModel="True"
  WindowStartupLocation="CenterScreen"
  mc:Ignorable="d">

    <Window.Resources>
    <DataTemplate x:Key="DataTemplateSourcesToEdit" DataType="models:Source">
        <StackPanel Background="#00000000" Orientation="Horizontal">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.(viewModels:EditFeedFormWindowViewModel.ClickedSource)}" CommandParameter="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <materialDesign:PackIcon
                Width="25"
                Height="25"
                VerticalAlignment="Center"
                Kind="Label" />
            <TextBlock
                Margin="20,10"
                VerticalAlignment="Center"
                Text="{Binding Name}" />
        </StackPanel>
    </DataTemplate>
    </Window.Resources>

    <DockPanel Margin="10,10,10,10">
    <Button
    DockPanel.Dock="Bottom"
      Click="CloseWindow"
      Content="Close"
      Style="{StaticResource MaterialDesignRaisedDarkButton}"
      ToolTip="Close without adding a new Source" />
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
            <Border Grid.Column="1" 
                    Grid.RowSpan="4" 
                    BorderBrush="Black" 
                    BorderThickness="1,0,0,0" 
                    Background="{x:Null}" />

            <StackPanel
            Margin="10,0,10,10"
            Grid.Row="0"
            Grid.Column="0" >
            <ListView
                Background="#FFDADAE0"
                BorderBrush="{x:Null}"
                Foreground="Black"
                ItemTemplate="{StaticResource DataTemplateSourcesToEdit}"
                ItemsSource="{Binding AllSources}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Height" Value="{StaticResource HeightListViewItemSource}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <!--ItemsControl 
            Grid.IsSharedSizeScope="True" 
            ItemsSource="{Binding AllSources}">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type models:Source}">
                    <Border
                        x:Name="Border"
                        Padding="8"
                        BorderBrush="{DynamicResource MaterialDesignDivider}"
                        BorderThickness="0,0,0,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="Checkerz" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ToggleButton
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsSelected}"
                                Style="{StaticResource MaterialDesignActionLightToggleButton}">
                                <materialDesign:PackIcon
                                    Width="21"
                                    Height="21"
                                    Kind="DeleteForeverOutline" />
                            </ToggleButton>
                            <StackPanel Grid.Column="1" Margin="8,0,0,0">
                                <TextBlock FontWeight="Bold" Text="{Binding Name}" />
                                <TextBlock Text="{Binding FeedUri}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            </-->
            <Button
              Margin="0,10,0,0"
              Click="CloseWindow"
              Content="Delete 1 Source(s)"
              Style="{StaticResource MaterialDesignRaisedButton}"
              ToolTip="Delete the clicked Source(s)" />
        </StackPanel>

        <StackPanel
        Margin="10,0,10,10"
           Grid.Row="0" 
           Grid.Column="1" >
            <TextBox
              Margin="0,0,0,10"
              materialDesign:HintAssist.Hint="Title"
              Style="{StaticResource MaterialDesignFloatingHintTextBox}"
              Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
            <TextBox
              Margin="0,0,0,10"
              materialDesign:HintAssist.Hint="URL"
              Style="{StaticResource MaterialDesignFloatingHintTextBox}"
              Text="{Binding Uri, UpdateSourceTrigger=PropertyChanged}" />
            <ComboBox
              materialDesign:HintAssist.Hint="Category"
              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
              Text="{Binding Category, UpdateSourceTrigger=PropertyChanged}">
                <ComboBoxItem Content="Sport" />
                <ComboBoxItem Content="Technik" />
                <ComboBoxItem Content="News" />
                <ComboBoxItem Content="Allgemeines" />
            </ComboBox>
            <Button
              Margin="0,10,0,0"
              Command="{Binding AddCommand}"
              Click="CloseWindow"
              Content="Change"
              Style="{StaticResource MaterialDesignRaisedButton}"
              ToolTip="Change the given Source" />
        </StackPanel>
    </Grid>
    </DockPanel>
</Window>
